{"version":3,"file":"static/js/917.f0f8f36d.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/SearchFilter/SearchFilter.jsx","components/ContactList/ContactList.jsx","pages/Phonebook.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\n\n// export const getFilteredContacts = state => {\n//     const {filter, contacts} = state;\n//     console.log(contacts);\n\n//     if(!filter) {\n//         return contacts.items;\n//     }\n\n//     const filteredContacts = contacts.items.filter(\n//         ({name}) => \n//         name.toLowerCase().includes(filter.toLowerCase())\n//         );\n\n//         return filteredContacts;\n// };\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getLoading = state => state.contacts.isLoading;","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {useDispatch, useSelector} from 'react-redux';\n// import {Form, Label, Input, Btn} from './ContactForm.styled'\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport {getContacts} from 'redux/contacts/contactsSelectors';\n\nconst ContactForm = () => {\n\nconst [name, setName] = useState('');\nconst [number, setNumber] = useState('');\nconst contacts = useSelector(getContacts);\nconst dispatch = useDispatch();\n\nconst handleChange = (e) => {\n    const {name, value} = e.currentTarget;\n    \n    switch (name) {\n        case 'name':\n            setName(value);\n            break;\n        \n        case 'number':\n            setNumber(value);\n            break;\n\n        default: return;    \n    }\n}\n\nconst handleSubmit = (e) => {\n    e.preventDefault();\n        if (contacts.length > 0 && contacts.find((c) => c.name === name)) {\n            return alert (`Contact ${name} already exists`);\n        }\n        dispatch(addContact({name: name, number: number}))\n        reset();\n    };\n    \nconst reset = () => {\n    setName('');\n    setNumber('');\n}\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <lable htmlFor=\"\">\n                    Name\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={name}\n                        onChange={handleChange}\n                        // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                </lable>\n                <lable htmlFor=\"\">\n                Phone number\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    onChange={handleChange}\n                    // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required \n                />\n                </lable>\n                <button type='submit'>Add contact</button>     \n            </form>\n        </>        \n     )\n    }\n\nContactForm.propTypes = {\n    onFormSubmit: PropTypes.func,\n};\n\nexport default ContactForm;","import PropTypes from 'prop-types';\n// import {Input, SubTitle} from './SearchFilter.styled'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/contactsSlice';\nimport { getFilter } from 'redux/contacts/contactsSelectors';\n\nconst SearchFilter = () => {\n\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n//   console.log(filter)\n\n    return (\n    <>\n      <tytle>Find contact by name</tytle>\n      <input \n        type=\"text\" \n        value={filter}\n        onChange={e => {dispatch(filterContacts(e.currentTarget.value))}}/>\n    </>\n  )\n};\n\nSearchFilter.propTypes = {\n  onChange: PropTypes.func,\n};\n\nexport default SearchFilter;","import PropTypes from 'prop-types';\n// import {Contact, Btn, Container} from './ContactList.styled';\nimport { Container } from 'components/Container/Container';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { getContacts, getFilter} from 'redux/contacts/contactsSelectors';\n\nconst ContactList = () => {\n\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n    // console.log(contacts)\n    const filter = useSelector(getFilter);\n\n    const onContactDelete = contactId => {\n        dispatch(deleteContact(contactId))\n    };\n\n    return (\n\n       <Container>\n            <h2>Contacts</h2>\n        \n            {contacts.length > 0 && contacts.filter(({name}) => name.toLowerCase().includes(filter.toLowerCase())).map(({id, name, number}) => {\n            return (\n                <li key={id}>\n                    {name}: {number}\n                    <button \n                    type=\"button\"\n                    name=\"delete\"\n                    onClick={() => onContactDelete(id)}>Delete</button>\n                </li> )\n            })}\n        </Container>\n    )  \n};\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string,\n          name: PropTypes.string,\n          number: PropTypes.string,\n        })\n      ),\n      deleteContact: PropTypes.func,\n    };\n\nexport default ContactList;","import {Container} from '../components/Container/Container';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport SearchFilter from '../components/SearchFilter/SearchFilter';\nimport ContactList from '../components/ContactList/ContactList'\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { useDispatch } from 'react-redux';\n\n\n\nconst Phonebook = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <Container>\n            <h2>Phonebook</h2>\n                <ContactForm />\n                <SearchFilter />\n                \n                <ContactList />\n        </Container>\n    )\n};\n\nexport default Phonebook;"],"names":["getContacts","state","contacts","items","getFilter","filter","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","_e$currentTarget","currentTarget","value","reset","_jsx","_Fragment","children","_jsxs","onSubmit","preventDefault","length","find","c","alert","concat","addContact","htmlFor","type","onChange","title","required","filterContacts","Container","_ref","toLowerCase","includes","map","_ref2","id","onClick","contactId","deleteContact","useEffect","fetchContacts","ContactForm","SearchFilter","ContactList"],"sourceRoot":""}