{"version":3,"file":"static/js/917.f4fbdf5d.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/SearchFilter/SearchFilter.jsx","components/ContactList/ContactList.jsx","pages/Phonebook.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\n\nexport const selectFilteredContacts = state => {\n    const {filter, items} = state.contacts;\n   console.log(filter, items)\n\n    if(!filter) {\n        return items;\n    }\n\n    const filteredContacts = items.filter(\n        ({name}) => name.toLowerCase().includes(filter.toLowerCase())\n    );\n    console.log('zzz',filteredContacts);\n     return filteredContacts;\n};\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectLoading = state => state.contacts.isLoading;","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {useDispatch, useSelector} from 'react-redux';\n// import {Form, Label, Input, Btn} from './ContactForm.styled'\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport {selectContacts} from 'redux/contacts/contactsSelectors';\n\nconst styles = {\n    form: {\n      width: 320,\n    },\n    label: {\n      display: 'flex',\n      flexDirection: 'column',\n      marginBottom: 15,\n    },\n  };\n\nconst ContactForm = () => {\n\nconst [name, setName] = useState('');\nconst [number, setNumber] = useState('');\nconst contacts = useSelector(selectContacts);\nconst dispatch = useDispatch();\n\nconst handleChange = (e) => {\n    const {name, value} = e.currentTarget;\n    \n    switch (name) {\n        case 'name':\n            setName(value);\n            break;\n        \n        case 'number':\n            setNumber(value);\n            break;\n\n        default: return;    \n    }\n}\n\nconst handleSubmit = (e) => {\n    e.preventDefault();\n        if (contacts && contacts.find((c) => c.name === name)) {\n            reset();\n            return alert (`Contact ${name} already exists`);\n            \n        }\n        dispatch(addContact({name: name, number: number}))\n        reset();\n    };\n    \nconst reset = () => {\n    setName('');\n    setNumber('');\n}\n\n    return (\n        <>\n            <form onSubmit={handleSubmit} style={styles.form}>\n                <label htmlFor=\"\" style={styles.label}>\n                    Name\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={name}\n                        onChange={handleChange}\n                        // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                </label>\n                <label htmlFor=\"\" style={styles.label}>\n                Phone number\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    onChange={handleChange}\n                    // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required \n                />\n                </label>\n                <button type='submit'>Add contact</button>     \n            </form>\n        </>        \n     )\n    }\n\nContactForm.propTypes = {\n    onFormSubmit: PropTypes.func,\n};\n\nexport default ContactForm;","import PropTypes from 'prop-types';\n// import {Input, SubTitle} from './SearchFilter.styled'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/contactsSlice';\nimport { selectFilter } from 'redux/contacts/contactsSelectors';\n\nconst styles = {\n  div: {\n    width: 320,\n    marginTop: 45,\n  },\n  input: {\n    marginTop: 5,\n  }\n};\n\nconst SearchFilter = () => {\n\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  console.log(filter)\n\n    return (\n    <div style={styles.div}>\n      <h2>Find contact by name</h2>\n      <input style={styles.input}\n        type=\"text\" \n        value={filter}\n        onChange={e => {dispatch(filterContacts(e.currentTarget.value))}}/>\n    </div>\n  )\n};\n\nSearchFilter.propTypes = {\n  onChange: PropTypes.func,\n};\n\nexport default SearchFilter;","import PropTypes from 'prop-types';\n// import {Contact, Btn, Container} from './ContactList.styled';\nimport { Container } from 'components/Container/Container';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { selectFilteredContacts} from 'redux/contacts/contactsSelectors';\n\nconst ContactList = () => {\n\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectFilteredContacts);\n   \n\n    const onContactDelete = contactId => {\n        dispatch(deleteContact(contactId))\n    };\n\n    return (\n\n       <Container>\n            <h2>Contacts</h2>\n        \n            {contacts && contacts.map(({id, name, number}) => {\n            return (\n                <li key={id}>\n                    {name}: {number}\n                    <button \n                    type=\"button\"\n                    name=\"delete\"\n                    onClick={() => onContactDelete(id)}>Delete</button>\n                </li> )\n            })}\n        </Container>\n    )  \n};\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string,\n          name: PropTypes.string,\n          number: PropTypes.string,\n        })\n      ),\n      deleteContact: PropTypes.func,\n    };\n\nexport default ContactList;","import {Container} from '../components/Container/Container';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport SearchFilter from '../components/SearchFilter/SearchFilter';\nimport ContactList from '../components/ContactList/ContactList'\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { useDispatch } from 'react-redux';\n\n\n\nconst Phonebook = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <Container>\n            <h2>Phonebook</h2>\n                <ContactForm />\n                <SearchFilter />\n                \n                <ContactList />\n        </Container>\n    )\n};\n\nexport default Phonebook;"],"names":["selectContacts","state","contacts","items","selectFilteredContacts","_state$contacts","filter","console","log","filteredContacts","_ref","name","toLowerCase","includes","selectFilter","styles","form","width","label","display","flexDirection","marginBottom","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","_e$currentTarget","currentTarget","value","reset","_jsx","_Fragment","children","_jsxs","onSubmit","preventDefault","find","c","alert","concat","addContact","style","htmlFor","type","onChange","title","required","div","marginTop","input","filterContacts","Container","map","id","onClick","contactId","deleteContact","useEffect","fetchContacts","ContactForm","SearchFilter","ContactList"],"sourceRoot":""}